import sqlite3

def init(): 
    connection = sqlite3.connect('database.db')
    with open('schema.sql') as f:
        connection.executescript(f.read())
    connection.commit()
    connection.close()
    
def execute(sql, params = None, one = False):
    with sqlite3.connect('database.db') as connection:
        connection.row_factory = sqlite3.Row
        if params:
            result = connection.execute(sql, params)
        else:
            result = connection.execute(sql)
        if one:
            result = result.fetchone()
        else:
            result = result.fetchall()
        connection.commit()
    connection.close()
    return result


def insert(x):
    sql = "INSERT INTO pokemon(name, hp, attack, defense, speed, sp_attack, sp_defense, desc, img, cluster) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
    params = (x["name"], x["hp"], x["attack"], x["defense"], x["speed"], x["sp_attack"], x["sp_defense"], x["desc"], x["img"], x["cluster"])
    execute(sql, params)
    
    # # get the autogenerated id
    # sql = "SELECT last_insert_rowid();"
    # return (execute(sql))[0]

# TODO: figure out the layout for the history - be that through cards or some other method   
def get_pokemon():
    sql = f"SELECT * FROM pokemon"
    return execute(sql)
        
